name: .NET Core

on:
  push:
    branches: master

jobs:
  nuget:
    name: Publish to NuGET
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        
    - name: Publish NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: src/Alex.MoLang/Alex.MoLang.csproj
        PACKAGE_NAME: Alex.MoLang
        NUGET_KEY: ${{secrets.NUGET_PUBLISH_KEY}}
        VERSION_STATIC: '1.0.${{github.run_id}}'
        TAG_COMMIT: false
        
  package:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          rid: linux-x64
          artifact: 'Linux Binaries'
          platform: 'Linux'
          
        - os: macos-latest
          rid: osx-x64
          artifact: 'MacOS Binaries'
          platform: 'MacOS'
          
        - os: windows-latest
          rid: win-x64
          artifact: 'Windows Binaries'
          platform: 'Windows'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: 5.0.x
    
    - name: Get short SHA
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
    - name: Build
      run: dotnet publish --configuration Release -o "build" --version-suffix ${{steps.vars.outputs.sha_short}} -r ${{matrix.rid}} /p:PublishReadyToRun=false /p:TieredCompilation=false --self-contained
      working-directory: src/Alex

    #- name: Set executable permissions
    #  working-directory: src/Alex/build
    #  run: chmod +x Alex
        
    - name: Zip Build
      uses: papeloto/action-zip@v1
      with:
        files: "src/Alex/build"
        dest: ./release.zip
        
    - name: Create Release
      uses: tix-factory/release-manager@v1
      with:
        github_token: ${{ secrets.github_token }}
        mode: uploadReleaseAsset
        filePath: ./release.zip
        assetName: ${{ format('{0}.zip', matrix.platform) }}
        tag: ${{ format('release-{0}', github.run_number) }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: ${{matrix.artifact}}
        # Directory containing files to upload
        path: ./release.zip
